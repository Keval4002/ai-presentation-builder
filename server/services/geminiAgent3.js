import { callPollinations } from "../utils/pollinationApi.js";
import pLimit from "p-limit";

/**
 * Enrich slides with generated image URLs.
 * @param {Array} slides - Slides generated by geminiAgent1
 * @returns {Promise<Array>} - Slides with imageUrl added
 */

const limit = pLimit(5);



async function geminiAgent3(slides){

    const enrichedSlides = await Promise.allSettled(
        slides.map((slide)=>
            limit(async()=>{

                const prompt = slide.imageSuggestion?.description || "abstract digital art";
                const imageUrl = await callPollinations({prompt});
                return{
                    ...slide, imageSuggestion:{...slide.imageSuggestion, imageUrl}
                }
        })
    ));

    

    return enrichedSlides.map((result, index)=>{
        if(result.status === "fulfilled") return result.value;
        console.error(`Image generation failed for slide ${slides[index].slideNumber}`, result.reason);
        return{
            ...slide, imageSuggestion:{...slides[index].imageSuggestion, imageUrl:null}
        }
    });
}

export {geminiAgent3};